{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","className","debitBalance","creditBalance","debit_array","map","statements","debit_value","debit_numeric_update","debit_statement","debit_update","onClick","addDebit","Credits","credit_array","credit_value","credit_numeric_update","credit_statement","credit_update","addCredit","App","event","today","Date","date","getFullYear","getMonth","getDate","prev","concat","conversion","parseFloat","toFixed","logInInfo","newUser","currentUser","Promise","all","fetch","then","json","debit_promise","credit_promise","i","joined","amount","description","slice","joined_2","round","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dbae131.chunk.js","sourcesContent":["// src/components/AccountBalance.js\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          Balance: {this.props.accountBalance}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","// src/components/Home.js\r\n// The Home component is used to demonstrate the use of Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n          <h1>Bank of React</h1>\r\n          <Link to=\"/userProfile\">User Profile</Link>\r\n          <br/>\r\n          <Link to=\"/login\">Login</Link>\r\n          <br/>\r\n          <Link to=\"/credits\">Credits </Link>\r\n          <br/>\r\n          <Link to=\"/Debits\">Debits </Link>\r\n          <AccountBalance accountBalance={this.props.accountBalance}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","// src/components/UserProfile.js\r\n// The UserProfile component is used to demonstrate the use of Route and Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h1>User Profile</h1>\r\n          <div>Username: {this.props.userName}</div>\r\n          <div>Member Since: {this.props.memberSince}</div>\r\n          <Link to=\"/\">Return to Home</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","// src/components/Login.js\r\n// The LogIn component is used to demonstrate the use of Redirect.\r\n\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogIn extends Component {\r\n  constructor () {  // Create and initialize state\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  // When the user name input is changed, capture the input and update the state (user.userName)\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n    //console.log(this.state.user.userName)\r\n\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n  \r\n  render () {\r\n    if (this.state.redirect) {  // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n    // Render the login form\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>                  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","// src/components/Debits.js\r\n//import AccountBalance from './AccountBalance';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './leftside.css'\r\n\r\nclass Debits extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/\" className='HomeButton'>Home</Link>\r\n\r\n        <h1>Debits</h1>\r\n\r\n        <h4 className='debit'>Total Debit Value: {this.props.debitBalance}</h4>\r\n        <h4 className='credit'>Total Credit Value: {this.props.creditBalance}</h4>\r\n        <h4 className='account'>Account Balance: {this.props.accountBalance}</h4>\r\n        <ul>\r\n          {\r\n            this.props.debit_array.map((statements) => {\r\n              return <li>{statements}</li>\r\n            })\r\n          }\r\n        </ul>\r\n        <label>Amount</label>\r\n        <input type=\"text\" value={this.props.debit_value} onChange={this.props.debit_numeric_update} />\r\n        <label>Description</label>\r\n        <input type=\"text\" value={this.props.debit_statement} onChange={this.props.debit_update} />\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.props.addDebit}>Add Statement</button>\r\n        <Link to=\"/credits\" className='Linkclass'>Credit Page</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Debits;","// src/components/Credits.js\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './leftside.css'\r\n\r\nclass Credits extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/\" className='HomeButton'>Home</Link>\r\n                <h1>Credits</h1>\r\n                <h4 className='debit'>Total Debit Value: {this.props.debitBalance}</h4>\r\n                <h4 className='credit'>Total Credit Value: {this.props.creditBalance}</h4>\r\n                <h4 className='account'>Account Balance: {this.props.accountBalance}</h4>\r\n                <ul>\r\n                    {\r\n                        this.props.credit_array.map((statements) => {\r\n                            return <li>{statements}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n                <label>Amount</label>\r\n                <input type=\"text\" value={this.props.credit_value} onChange={this.props.credit_numeric_update} />\r\n                <label>Description</label>\r\n                <input type=\"text\" value={this.props.credit_statement} onChange={this.props.credit_update} />\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.props.addCredit}>Add Statement</button>\r\n                <Link to=\"/Debits\" className='Linkclass'>Debits Page </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Credits;","// src/App.js\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Debits from './components/Debits';\r\nimport Credits from './components/Credits';\r\n\r\nclass App extends Component {\r\n  constructor(props) {  // Create and initialize state\r\n    super(props);\r\n    this.state = {\r\n      accountBalance: 0.0,\r\n      debitBalance: 0.0,\r\n      creditBalance: 0.0,\r\n      // DEBIT PORTION //\r\n      debit_statement: '',\r\n      debit_value: '',\r\n      debit_array: [],\r\n      // CREDIT PORTION //\r\n      credit_statement: '',\r\n      credit_array: [],\r\n      credit_value: '',\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '07/23/96',\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //PROMISE ALL FETCHES AT THE SAME TIME SO ONE FETCH DOES NOT OPERATE OVER THE OTHER, IN OTHER WORDS, DO THIS SO THE CODE ACTUALLY WORKS IN ORDER\r\n    Promise.all([\r\n      fetch('https://moj-api.herokuapp.com/debits').then(value => value.json()),\r\n      fetch('https://moj-api.herokuapp.com/credits').then(value => value.json())\r\n    ])\r\n      .then((value => {\r\n        //SPLITTING VALUE ARRAY TO TWO NEW ARRAYS\r\n        let debit_promise = value[0] //Getting Debit API\r\n        let credit_promise = value[1] //Getting Credit API\r\n        for (let i = 0; i < 10; i++) {\r\n          //Setting array for Debit API\r\n          var joined = this.state.debit_array.concat('$' + debit_promise[i].amount + ' ' + debit_promise[i].description + ' ' + debit_promise[i].date.slice(0, 10));\r\n          //Setting array for Credit API\r\n          var joined_2 = this.state.credit_array.concat('$' + credit_promise[i].amount + ' ' + credit_promise[i].description + ' ' + credit_promise[i].date.slice(0, 10));\r\n          this.setState({\r\n            debit_array: joined,\r\n            credit_array: joined_2,\r\n            debitBalance: this.state.debitBalance + debit_promise[i].amount,\r\n            creditBalance: this.state.creditBalance + credit_promise[i].amount\r\n          })\r\n        }\r\n        let round = this.state.creditBalance - this.state.debitBalance;\r\n        round = round.toFixed(2);\r\n        round = parseFloat(round);\r\n        this.setState({\r\n          accountBalance: round\r\n        })\r\n      }))\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////ADD CREDIT IMPLEMENTATION///////////////////////////////////////////////////////////////////////\r\n  //Event Handler for Description  \r\n  credit_update = (event) => {\r\n    this.setState({\r\n      credit_statement: event.target.value\r\n    });\r\n  }\r\n  //Event handler for Amount\r\n  credit_numeric_update = (event) => {\r\n    this.setState({\r\n      credit_value: event.target.value\r\n    });\r\n  }\r\n  //When Add Statement is pressed, do the following function:\r\n  addCredit = () => {\r\n    //Adding Date Portion\r\n    var today = new Date(); //Accessing Date constructor\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + (today.getDate()); //Grabbing Date YYYY-MM-DD\r\n    this.setState(prev => {\r\n      return {\r\n        credit_statement: '',\r\n        credit_array: prev.credit_array.concat(\"$\" + prev.credit_value + \" \" + prev.credit_statement + \" \" + date)\r\n      };\r\n    });\r\n    //Adding the credit value to the total credit balance\r\n    let conversion = parseFloat(this.state.credit_value) //Converting string input into a float number\r\n    this.setState(prev => {\r\n      return {\r\n        creditBalance: parseFloat((prev.creditBalance + conversion).toFixed(2)), //Add the inputted value into the total credit value\r\n        accountBalance: parseFloat((prev.accountBalance + conversion).toFixed(2)) // Add money to account balance when adding more credit\r\n      };\r\n    });// EQUIVALENT OF THIS CODE: this.state.creditBalance += conversion;\r\n  }\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////////////////ADD DEBIT IMPLEMENTATION/////////////////////////////////////////////////////////////////////////////////////////\r\n  //Event Handler for Description  \r\n  debit_update = (event) => {\r\n    this.setState({\r\n      debit_statement: event.target.value\r\n    });\r\n  }\r\n  //Event handler for Amount\r\n  debit_numeric_update = (event) => {\r\n    this.setState({\r\n      debit_value: event.target.value\r\n    });\r\n  }\r\n  //When Add Statement is pressed, do the following function:\r\n  addDebit = () => {\r\n    //Adding Date Portion\r\n    var today = new Date(); //Accessing Date constructor\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + (today.getDate()); //Grabbing Date YYYY-MM-DD\r\n    this.setState(prev => {\r\n      return {\r\n        debit_statement: '',\r\n        debit_array: prev.debit_array.concat(\"$\" + prev.debit_value + \" \" + prev.debit_statement + \" \" + date)\r\n      };\r\n    });\r\n    //Adding the debit value to the total debit balance\r\n    let conversion = parseFloat(this.state.debit_value) //Converting string input into a float number\r\n    this.setState(prev => {\r\n      return {\r\n        debitBalance: parseFloat((prev.debitBalance + conversion).toFixed(2)), //Add the inputted value into the total debit value\r\n        accountBalance: parseFloat((prev.accountBalance - conversion).toFixed(2)) // Remove money from account when adding debit\r\n      };\r\n    });// EQUIVALENT OF THIS CODE: this.state.debitBalance += conversion;\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = { ...this.state.currentUser }\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({ currentUser: newUser })\r\n  }\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\r\n    const UserProfileComponent = () => (<UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}/>);\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />);  // Pass props to \"LogIn\" component\r\n    //Creating Credits Implementation\r\n    const CreditsComponent = () =>\r\n    (<Credits\r\n      accountBalance={this.state.accountBalance}\r\n      creditBalance={this.state.creditBalance}\r\n      credit_array={this.state.credit_array}\r\n      credit_value={this.state.credit_value}\r\n      credit_statement={this.state.credit_statement}\r\n      credit_update={this.credit_update}\r\n      credit_numeric_update={this.credit_numeric_update}\r\n      debitBalance={this.state.debitBalance}\r\n      addCredit={this.addCredit}\r\n    />);\r\n    //Creating Debit Implementation\r\n    const DebitsComponent = () =>\r\n    (\r\n      <Debits\r\n        accountBalance={this.state.accountBalance}\r\n        debitBalance={this.state.debitBalance}\r\n        debit_array={this.state.debit_array}\r\n        debit_update={this.debit_update}\r\n        debit_numeric_update={this.debit_numeric_update}\r\n        addDebit={this.addDebit}\r\n        debit_value={this.state.debit_value}\r\n        debit_statement={this.state.debit_statement}\r\n        creditBalance={this.state.creditBalance}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Router basename=\"/assignment4\">  \r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent} />\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\r\n          <Route exact path=\"/login\" render={LogInComponent} />\r\n          <Route exact path=\"/credits\" render={CreditsComponent} />\r\n          <Route exact path=\"/Debits\" render={DebitsComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}